{
  "hash": "f329bad6fb8aa8692a8fcec8fd9920ae",
  "result": {
    "markdown": "---\ntitle: \"Demo 10: Modifying colors and themes\"\nformat: html\n---\n\n\nThroughout this demo we will once again use the [`palmerpenguins` dataset](https://allisonhorst.github.io/palmerpenguins/articles/intro.html). To access the data, you will need to install the `palmerpenguins` package:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"palmerpenguins\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(palmerpenguins)\ndata(penguins)\n```\n:::\n\n\n\n# Notes on colors in plots\n\nThree types of color scales to work with:\n\n1. __Qualitative__: distinguishing discrete items that don't have an order (nominal categorical). Colors should be distinct and equal with none standing out unless otherwise desired for emphasis.\n\n+ Do __NOT__ use a discrete scale on a continuous variable\n\n2. __Sequential__:  when data values are mapped to one shade, e.g., in a choropleth, for an ordered categorical variable or low to high continuous variable\n\n+ Do __NOT__ use a sequential scale on an unordered variable\n\n3. __Divergent__: think of it as two sequential scales with a natural midpoint\nmidpoint could represent 0 (assuming +/- values) or 50% if your data spans the full scale\n\n+ Do __NOT__ use a divergent scale on data without natural midpoint\n\n\n## Options for `ggplot2` colors\n\nThe default color scheme is pretty bad to put it bluntly, but `ggplot2` has ColorBrewer built in which makes it easy to customize your color scales. For instance, we change the palette for the species plot from before.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> \n  ggplot(aes(x = body_mass_g, y = bill_length_mm, color = species)) +\n  geom_point(alpha = 0.5, size = 2) +\n  scale_color_brewer(palette = \"Set2\") +\n  labs(x = \"Body Mass (g)\", y = \"Bill Length (mm)\") +\n  theme_bw()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](10-colors-themes_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nSomething you should keep in mind is to pick a [color-blind friendly palette](http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/). One simple way to do this is by using the `ggthemes` package which has color-blind friendly palettes included:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> \n  ggplot(aes(x = body_mass_g, y = bill_length_mm, color = species)) +\n  geom_point(alpha = 0.5, size = 2) +\n  ggthemes::scale_color_colorblind() +\n  labs(x = \"Body Mass (g)\", y = \"Bill Length (mm)\") +\n  theme_bw()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](10-colors-themes_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nIn terms of displaying color from low to high, the [viridis scales](https://ggplot2.tidyverse.org/reference/scale_viridis.html) are excellent choices (and are also color-blind friendly!).\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> \n  ggplot(aes(x = body_mass_g, y = bill_length_mm, \n             color = flipper_length_mm)) +\n  geom_point(alpha = 0.5, size = 2) +\n  scale_color_viridis_c() +\n  labs(x = \"Body Mass (g)\", y = \"Bill Length (mm)\",\n       color = \"Flipper Length (mm)\") +\n  theme_bw()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](10-colors-themes_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n# Notes on themes\n\nThroughout the semester, you have seen various changes to the `theme` of plots for customization in lectures and assignments. __You will constantly be changing the theme of your plots to optimize the display.__ Fortunately, there are a number of built-in themes you can use to start with rather than the default `theme_gray()`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> \n  ggplot(aes(x = body_mass_g, y = bill_length_mm, color = species)) +\n  geom_point(alpha = 0.5, size = 2) +\n  ggthemes::scale_color_colorblind() +\n  labs(x = \"Body Mass (g)\", y = \"Bill Length (mm)\") +\n  theme_gray()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](10-colors-themes_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nFor instance, you have seen me use `theme_bw()` many times throughout the semester:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> \n  ggplot(aes(x = body_mass_g, y = bill_length_mm, color = species)) +\n  geom_point(alpha = 0.5, size = 2) +\n  ggthemes::scale_color_colorblind() +\n  labs(x = \"Body Mass (g)\", y = \"Bill Length (mm)\") +\n  theme_bw()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](10-colors-themes_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nAs well as `theme_light()`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> \n  ggplot(aes(x = body_mass_g, y = bill_length_mm, color = species)) +\n  geom_point(alpha = 0.5, size = 2) +\n  ggthemes::scale_color_colorblind() +\n  labs(x = \"Body Mass (g)\", y = \"Bill Length (mm)\") +\n  theme_light()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](10-colors-themes_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nThere are options such as `theme_minimal()`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> \n  ggplot(aes(x = body_mass_g, y = bill_length_mm, color = species)) +\n  geom_point(alpha = 0.5, size = 2) +\n  ggthemes::scale_color_colorblind() +\n  labs(x = \"Body Mass (g)\", y = \"Bill Length (mm)\") +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](10-colors-themes_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\nor `theme_classic()`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> \n  ggplot(aes(x = body_mass_g, y = bill_length_mm, color = species)) +\n  geom_point(alpha = 0.5, size = 2) +\n  ggthemes::scale_color_colorblind() +\n  labs(x = \"Body Mass (g)\", y = \"Bill Length (mm)\") +\n  theme_classic()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](10-colors-themes_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\nThere are also packages with popular, such as the `ggthemes` package which includes, for example, `theme_economist()`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggthemes)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggthemes' was built under R version 4.2.3\n```\n:::\n\n```{.r .cell-code}\npenguins |> \n  ggplot(aes(x = body_mass_g, y = bill_length_mm, color = species)) +\n  geom_point(alpha = 0.5, size = 2) +\n  ggthemes::scale_color_colorblind() +\n  labs(x = \"Body Mass (g)\", y = \"Bill Length (mm)\") +\n  theme_economist()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](10-colors-themes_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nand `theme_fivethirtyeight()` to name a couple:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> \n  ggplot(aes(x = body_mass_g, y = bill_length_mm, color = species)) +\n  geom_point(alpha = 0.5, size = 2) +\n  ggthemes::scale_color_colorblind() +\n  labs(x = \"Body Mass (g)\", y = \"Bill Length (mm)\") +\n  theme_fivethirtyeight()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](10-colors-themes_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nWith any theme you have picked, you can then modify specific components directly using the `theme()` layer. There are [many aspects of the plot's theme to modify](https://ggplot2.tidyverse.org/reference/theme.html), such as my decision to move the legend to the bottom of the figure, drop the legend title, and increase the font size for the y-axis:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> \n  ggplot(aes(x = body_mass_g, y = bill_length_mm, color = species)) +\n  geom_point(alpha = 0.5, size = 2) +\n  ggthemes::scale_color_colorblind() +\n  labs(x = \"Body Mass (g)\", y = \"Bill Length (mm)\",\n       title = \"Larger penguins tend to have larger bills\",\n       subtitle = \"Positive relationship between mass and length is consistent across species\") +\n  theme_bw() +\n  theme(legend.position = \"bottom\",\n        legend.title = element_blank(),\n        axis.text.y = element_text(size = 14),\n        axis.text.x = element_text(size = 6))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](10-colors-themes_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\nIf you're tired of explicitly customizing every plot in the same way all the time, then you should make a custom theme. It's quite easy to make a custom theme for `ggplot2` and of course [there are an incredible number of ways to customize your theme](https://themockup.blog/posts/2020-12-26-creating-and-using-custom-ggplot2-themes/). In the code chunk, I modify the `theme_bw()` theme using the `%+replace%` argument to make my new theme named `my_theme()` - which is stored as a function:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_theme <- function () {\n  # Start with the base font size\n  theme_bw(base_size = 10) %+replace%\n    theme(\n      panel.background  = element_blank(),\n      plot.background = element_rect(fill = \"transparent\", color = NA), \n      legend.position = \"bottom\",\n      legend.background = element_rect(fill = \"transparent\", color = NA),\n      legend.key = element_rect(fill = \"transparent\", color = NA),\n      axis.ticks = element_blank(),\n      panel.grid.major = element_line(color = \"grey90\", size = 0.3), \n      panel.grid.minor = element_blank(),\n      plot.title = element_text(size = 18, \n                                hjust = 0, vjust = 0.5, \n                                face = \"bold\", \n                                margin = margin(b = 0.2, unit = \"cm\")),\n      plot.subtitle = element_text(size = 12, hjust = 0, \n                                   vjust = 0.5, \n                                   margin = margin(b = 0.2, unit = \"cm\")),\n      plot.caption = element_text(size = 7, hjust = 1,\n                                  face = \"italic\", \n                                  margin = margin(t = 0.1, unit = \"cm\")),\n      axis.text.x = element_text(size = 13),\n      axis.text.y = element_text(size = 13)\n    )\n}\n```\n:::\n\n\n\nNow I can go ahead and my plot from before with this theme:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> \n  ggplot(aes(x = body_mass_g, y = bill_length_mm, color = species)) +\n  geom_point(alpha = 0.5, size = 2) +\n  ggthemes::scale_color_colorblind() +\n  labs(x = \"Body Mass (g)\", y = \"Bill Length (mm)\",\n       title = \"Larger penguins tend to have larger bills\",\n       subtitle = \"Positive relationship between mass and length is consistent across species\") +\n  my_theme()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](10-colors-themes_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "10-colors-themes_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}