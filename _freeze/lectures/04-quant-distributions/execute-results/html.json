{
  "hash": "6d3d85d2be11e2664df227782a0c9c5f",
  "result": {
    "markdown": "---\ntitle: \"Visualizing Quantitative Distributions\"\nauthor: \"Prof Ron Yurko\"\nfooter:  \"[mads-36613-fall24](https://ryurko.github.io/mads-36613-fall24/)\"\ndate: 2024-09-09\nengine: knitr\nformat:\n  revealjs:\n    theme: theme.scss\n    chalkboard: true\n    pdf-separate-fragments: true\n    slide-number: c/t\n    smaller: true\n    code-line-numbers: true\n    linestretch: 1.25\n    html-math-method:\n      method: mathjax\n      url: \"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"\n---\n\n\n\n\n## Reminders, previously, and today...\n\n+ **HW2 is due Wednesday Sept 11th!**\n\n+ **HW3 is posted and due next Wednesday Sept 18th**\n\n. . .\n\n+ Visualized 2D categorical data with more bar charts, include mosaic plots\n\n+ Walked through different approaches for 1D quantitative data visualization\n\n. . .\n\n**TODAY:**\n\n+ Thinking carefully about histograms\n\n+ Introduction to density estimation\n\n+ Visualization 1D quantitative by 1D categorical distributions\n\n---\n\n## Simulate data from mixture of Normal distributions\n\n\nWill sample 100 draws from $N(-1.5, 1)$ and 100 draws from $N(1.5, 1)$\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](04-quant-distributions_files/figure-revealjs/unnamed-chunk-2-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n---\n\n## Revisit histograms\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nset.seed(2024)\nfake_data <- \n  tibble(fake_x = c(rnorm(100, -1.5), rnorm(100, 1.5))) |>\n  mutate(component = c(rep(\"left\", 100), rep(\"right\", 100)))\n\nfake_data |>\n  ggplot(aes(x = fake_x)) +\n  geom_histogram() +\n  scale_x_continuous(limits = c(-5, 5))\n```\n\n::: {.cell-output-display}\n![](04-quant-distributions_files/figure-revealjs/unnamed-chunk-3-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n## What happens as we change the number of bins?\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nfake_data |>\n  ggplot(aes(x = fake_x)) +\n  geom_histogram(bins = 15) +\n  scale_x_continuous(limits = c(-5, 5))\n```\n\n::: {.cell-output-display}\n![](04-quant-distributions_files/figure-revealjs/unnamed-chunk-4-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n---\n\n## What happens as we change the number of bins?\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nfake_data |>\n  ggplot(aes(x = fake_x)) +\n  geom_histogram(bins = 60) +\n  scale_x_continuous(limits = c(-5, 5))\n```\n\n::: {.cell-output-display}\n![](04-quant-distributions_files/figure-revealjs/unnamed-chunk-5-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n## What happens as we change the number of bins?\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nfake_data |>\n  ggplot(aes(x = fake_x)) +\n  geom_histogram(bins = 5) +\n  scale_x_continuous(limits = c(-5, 5))\n```\n\n::: {.cell-output-display}\n![](04-quant-distributions_files/figure-revealjs/unnamed-chunk-6-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n---\n\n## What happens as we change the number of bins?\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nfake_data |>\n  ggplot(aes(x = fake_x)) +\n  geom_histogram(bins = 100) +\n  scale_x_continuous(limits = c(-5, 5))\n```\n\n::: {.cell-output-display}\n![](04-quant-distributions_files/figure-revealjs/unnamed-chunk-7-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n---\n\n## Variability of graphs - 30 bins\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nset.seed(2024)\nfake_data <- \n  tibble(fake_x = c(rnorm(100, -1.5), rnorm(100, 1.5))) |>\n  mutate(component = c(rep(\"left\", 100), rep(\"right\", 100)))\n\nfake_data |>\n  ggplot(aes(x = fake_x)) +\n  geom_histogram() +\n  scale_x_continuous(limits = c(-5, 5))\n```\n\n::: {.cell-output-display}\n![](04-quant-distributions_files/figure-revealjs/unnamed-chunk-8-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n---\n\n## What happens with a different sample?\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nset.seed(1979)\nfake_data2 <- \n  tibble(fake_x = c(rnorm(100, -1.5), rnorm(100, 1.5))) |>\n  mutate(component = c(rep(\"left\", 100), rep(\"right\", 100)))\n\nfake_data2 |>\n  ggplot(aes(x = fake_x)) +\n  geom_histogram() +\n  scale_x_continuous(limits = c(-5, 5))\n```\n\n::: {.cell-output-display}\n![](04-quant-distributions_files/figure-revealjs/unnamed-chunk-9-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n---\n\n## Variability of graphs - 15 bins\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](04-quant-distributions_files/figure-revealjs/unnamed-chunk-10-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n## Variability of graphs - 5 bins\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](04-quant-distributions_files/figure-revealjs/unnamed-chunk-11-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n---\n\n## Variability of graphs - 100 bins\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](04-quant-distributions_files/figure-revealjs/unnamed-chunk-12-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n## What do visualizations of continuous distributions display?\n\n__Probability that continuous variable $X$ takes a particular value is 0__ \n\ne.g., $P$ (`flipper_length_mm` $= 200$) $= 0$, _why_?\n\n. . .\n\nInstead we use the __probability density function (PDF)__ to provide a __relative likelihood__ \n\nFor continuous variables we can use the __cumulative distribution function (CDF)__,\n\n$$\nF(x) = P(X \\leq x)\n$$\n\n. . .\n\nFor $n$ observations we can easily compute the __Empirical CDF (ECDF)__:\n\n\n$$\\hat{F}_n(x)  = \\frac{\\text{# obs. with variable} \\leq x}{n} = \\frac{1}{n} \\sum_{i=1}^{n}1(x_i \\leq x)$$\n\n\n- where $1()$ is the indicator function, i.e. `ifelse(x_i <= x, 1, 0)`\n\n---\n\n## Display full distribution with ECDF plot\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\npenguins |>\n  ggplot(aes(x = flipper_length_mm)) + \n  stat_ecdf() +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](04-quant-distributions_files/figure-revealjs/unnamed-chunk-13-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n## What about comparing to theoretical distributions?\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\n![](https://upload.wikimedia.org/wikipedia/commons/thumb/7/74/Normal_Distribution_PDF.svg/2560px-Normal_Distribution_PDF.svg.png){fig-align=\"center\" width=100%}\n\n:::\n\n::: {.column width=\"50%\"}\n\n![](https://upload.wikimedia.org/wikipedia/commons/thumb/c/ca/Normal_Distribution_CDF.svg/2560px-Normal_Distribution_CDF.svg.png){fig-align=\"center\" width=100%}\n\n:::\n\n::::\n\n\n---\n\n## One-Sample Kolmogorov-Smirnov Test\n\n- We compare the ECDF $\\hat{F}(x)$ to a theoretical distribution's CDF $F(x)$\n\n- The one sample KS test statistic is: $\\text{max}_x |\\hat{F}(x) - F(x)|$\n\n![](https://upload.wikimedia.org/wikipedia/commons/c/cf/KS_Example.png){fig-align=\"center\" width=80%}\n\n---\n\n## Flipper length example\n\nWhat if we assume `flipper_length_mm` follows Normal distribution? \n\n+ i.e., `flipper_length_mm` $\\sim N(\\mu, \\sigma^2)$\n\nNeed estimates for mean $\\mu$ and standard deviation $\\sigma$:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nflipper_length_mean <- mean(penguins$flipper_length_mm, na.rm = TRUE)\nflipper_length_sd <- sd(penguins$flipper_length_mm, na.rm = TRUE)\n```\n:::\n\n\n. . .\n\nPerform one-sample KS test using [`ks.test()`](https://stat.ethz.ch/R-manual/R-devel/library/stats/html/ks.test.html):\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nks.test(x = penguins$flipper_length_mm, y = \"pnorm\",\n        mean = flipper_length_mean, sd = flipper_length_sd)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tAsymptotic one-sample Kolmogorov-Smirnov test\n\ndata:  penguins$flipper_length_mm\nD = 0.12428, p-value = 5.163e-05\nalternative hypothesis: two-sided\n```\n:::\n:::\n\n\n\n---\n\n## Flipper length example\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](04-quant-distributions_files/figure-revealjs/kstest-plot-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n### Visualize distribution comparisons using quantile-quantile (q-q) plots\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"2-4\"}\npenguins |>\n  ggplot(aes(sample = flipper_length_mm)) +\n  stat_qq() +\n  stat_qq_line()\n```\n\n::: {.cell-output-display}\n![](04-quant-distributions_files/figure-revealjs/unnamed-chunk-17-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n---\n\n## What about displaying conditional distributions?\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\npenguins |>\n  ggplot(aes(x = flipper_length_mm)) + \n  geom_histogram(aes(fill = species))\n```\n\n::: {.cell-output-display}\n![](04-quant-distributions_files/figure-revealjs/unnamed-chunk-18-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n## What about displaying conditional distributions?\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3-4\"}\npenguins |>\n  ggplot(aes(x = flipper_length_mm)) + \n  geom_histogram(aes(fill = species),\n                 position = \"identity\", alpha = 0.3)\n```\n\n::: {.cell-output-display}\n![](04-quant-distributions_files/figure-revealjs/unnamed-chunk-19-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n## Normalize histogram frequencies with density values\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3-4\"}\npenguins |>\n  ggplot(aes(x = flipper_length_mm)) + \n  geom_histogram(aes(y = after_stat(density), fill = species),\n                 position = \"identity\", alpha = 0.3) \n```\n\n::: {.cell-output-display}\n![](04-quant-distributions_files/figure-revealjs/unnamed-chunk-20-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n## Use density curves instead for comparison\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\npenguins |>\n  ggplot(aes(x = flipper_length_mm)) + \n  geom_density(aes(color = species))\n```\n\n::: {.cell-output-display}\n![](04-quant-distributions_files/figure-revealjs/unnamed-chunk-21-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n---\n\n## We should NOT fill the density curves\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\npenguins |>\n  ggplot(aes(x = flipper_length_mm)) + \n  geom_density(aes(fill = species), alpha = .3)\n```\n\n::: {.cell-output-display}\n![](04-quant-distributions_files/figure-revealjs/unnamed-chunk-22-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n---\n\n## What's the relationship between these two figures?\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](04-quant-distributions_files/figure-revealjs/unnamed-chunk-23-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n---\n\n## Kernel density estimation\n\n__Goal__: estimate the PDF $f(x)$ for all possible values (assuming it is continuous / smooth)\n\n. . .\n\n$$\n\\text{Kernel density estimate: } \\hat{f}(x) = \\frac{1}{n} \\sum_{i=1}^n \\frac{1}{h} K_h(x - x_i)\n$$\n\n. . .\n\n::: {style=\"font-size: 75%;\"}\n\n- $n =$ sample size, $x =$ new point to estimate $f(x)$ (does NOT have to be in dataset!)\n\n:::\n\n. . .\n\n::: {style=\"font-size: 75%;\"}\n\n- $h =$ __bandwidth__, analogous to histogram bin width, ensures $\\hat{f}(x)$ integrates to 1\n\n- $x_i =$ $i$th observation in dataset\n\n:::\n\n. . .\n\n::: {style=\"font-size: 75%;\"}\n\n- $K_h(x - x_i)$ is the __Kernel__ function, creates __weight__ given distance of $i$th observation from new point \n  - as $|x - x_i| \\rightarrow \\infty$ then $K_h(x - x_i) \\rightarrow 0$, i.e. further apart $i$th row is from $x$, smaller the weight\n  \n  - as __bandwidth__ $h \\uparrow$ weights are more evenly spread out (as $h \\downarrow$ more concentrated around $x$) \n\n  - typically use [__Gaussian__ / Normal](https://en.wikipedia.org/wiki/Normal_distribution) kernel: $\\propto e^{-(x - x_i)^2 / 2h^2}$\n  \n  - $K_h(x - x_i)$ is large when $x_i$ is close to $x$\n  \n:::\n\n---\n\n## [Wikipedia example](https://en.wikipedia.org/wiki/Kernel_density_estimation)\n\n![](https://upload.wikimedia.org/wikipedia/commons/thumb/4/41/Comparison_of_1D_histogram_and_KDE.png/1000px-Comparison_of_1D_histogram_and_KDE.png){fig-align=\"center\" width=100%}\n\n  \n---\n\n## We display __kernel density estimates__ with [`geom_density()`](https://ggplot2.tidyverse.org/reference/geom_density.html)\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\npenguins |>\n  ggplot(aes(x = flipper_length_mm)) + \n  geom_density() +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](04-quant-distributions_files/figure-revealjs/unnamed-chunk-24-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n---\n\n## Choice of [kernel?](https://en.wikipedia.org/wiki/Kernel_(statistics))\n\n![](https://upload.wikimedia.org/wikipedia/commons/thumb/4/47/Kernels.svg/1000px-Kernels.svg.png){fig-align=\"center\" width=70%}\n\n\n---\n\n## What about the bandwidth? \n\nUse __Gaussian reference rule__ (_rule-of-thumb_) $\\approx 1.06 \\cdot \\sigma \\cdot n^{-1/5}$, where $\\sigma$ is the observed standard deviation\n\nModify the bandwidth using the `adjust` argument - __value to multiply default bandwidth by__\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\npenguins |>\n  ggplot(aes(x = flipper_length_mm)) + \n  geom_density(adjust = 0.5) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](04-quant-distributions_files/figure-revealjs/unnamed-chunk-25-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n---\n\n## What about the bandwidth? \n\nUse __Gaussian reference rule__ (_rule-of-thumb_) $\\approx 1.06 \\cdot \\sigma \\cdot n^{-1/5}$, where $\\sigma$ is the observed standard deviation\n\nModify the bandwidth using the `adjust` argument - __value to multiply default bandwidth by__\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\npenguins |>\n  ggplot(aes(x = flipper_length_mm)) + \n  geom_density(adjust = 2) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](04-quant-distributions_files/figure-revealjs/unnamed-chunk-26-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n## CAUTION: dealing with bounded data...\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nset.seed(101)\nbound_data <- tibble(fake_x = runif(100))\n\nbound_data |>\n  ggplot(aes(x = fake_x)) +\n  geom_density() +\n  geom_rug(alpha = 0.5) + #<<\n  stat_function(data = \n                  tibble(fake_x = c(0, 1)),\n                fun = dunif, color = \"red\") +\n  scale_x_continuous(limits = c(-.5, 1.5))\n```\n\n::: {.cell-output-display}\n![](04-quant-distributions_files/figure-revealjs/bound-dens-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n## Visualizing conditional distributions with violin plots\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"2-4\"}\npenguins |>\n  ggplot(aes(x = species, y = flipper_length_mm)) +\n  geom_violin() +\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](04-quant-distributions_files/figure-revealjs/unnamed-chunk-28-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n---\n\n## Visualizing conditional distributions with violin plots\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\npenguins |>\n  ggplot(aes(x = species, y = flipper_length_mm)) +\n  geom_violin() + \n  geom_boxplot(width = .2) +\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](04-quant-distributions_files/figure-revealjs/unnamed-chunk-29-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n## Visualizing conditional distributions with [`ggridges` package](https://cran.r-project.org/web/packages/ggridges/vignettes/introduction.html)\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"1,3-4\"}\nlibrary(ggridges)\npenguins |>\n  ggplot(aes(x = flipper_length_mm, y = species)) +\n  geom_density_ridges(rel_min_height = 0.01)\n```\n\n::: {.cell-output-display}\n![](04-quant-distributions_files/figure-revealjs/unnamed-chunk-30-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n## Visualizing conditional distributions with [`ggbeeswarm` package](https://github.com/eclarke/ggbeeswarm)\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"1,3-4\"}\nlibrary(ggbeeswarm)\npenguins |>\n  ggplot(aes(x = flipper_length_mm, y = species)) +\n  geom_beeswarm(cex = 1.5) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](04-quant-distributions_files/figure-revealjs/unnamed-chunk-31-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n## Recap and next steps\n\n+ Discussed impact of bins on histograms\n\n+ Covered ECDFs and connection to KS-tests\n\n+ Walked through density estimation\n\n+ Discussed ways of visualizing conditional distributions\n\n. . .\n\n+ **HW2 is due Wednesday Sept 11th!**\n\n+ **HW3 is posted and due next Wednesday Sept 18th**\n\n. . .\n\n+ **Next time**: 2D quantitative data\n\n+ Recommended reading: \n\n+ [CW Chapter 7 Visualizing distributions: Histograms and density plots](https://clauswilke.com/dataviz/histograms-density-plots.html), [CW Chapter 8 Visualizing distributions: Empirical cumulative distribution functions and q-q plots](https://clauswilke.com/dataviz/ecdf-qq.html)\n\n\n---\n\n## BONUS: Visualizing the KS test statistic\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# First create the ECDF function for the variable:\nfl_ecdf <- ecdf(penguins$flipper_length_mm)\n# Compute the absolute value of the differences between the ECDF for the values\n# and the theoretical values with assumed Normal distribution:\nabs_ecdf_diffs <- abs(fl_ecdf(penguins$flipper_length_mm) - pnorm(penguins$flipper_length_mm,\n                                                                  mean = flipper_length_mean, sd = flipper_length_sd))\n# Now find where the maximum difference is:\nmax_abs_ecdf_diff_i <- which.max(abs_ecdf_diffs)\n# Get this flipper length value:\nmax_fl_diff_value <- penguins$flipper_length_mm[max_abs_ecdf_diff_i]\n# Plot the ECDF with the theoretical Normal and KS test info:\npenguins |>\n  ggplot(aes(x = flipper_length_mm)) +\n  stat_ecdf(color = \"darkblue\") +\n  # Use stat_function to draw the Normal ECDF\n  stat_function(fun = pnorm, args = list(mean = flipper_length_mean, sd = flipper_length_sd), color = \"black\", linetype = \"dashed\") +\n  # Draw KS test line:\n  geom_vline(xintercept = max_fl_diff_value, color = \"red\") +\n  # Add text with the test results (x and y are manually entered locations)\n  annotate(geom = \"text\", x = 215, y = .25, label = \"KS test stat = 0.12428\\np-value = 5.163e-05\") + \n  labs(x = \"Flipper length (mm)\", y = \"Fn(x)\") + theme_bw()\n```\n:::\n",
    "supporting": [
      "04-quant-distributions_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}