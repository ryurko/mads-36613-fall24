{
  "hash": "6098263dcaf918e09b31c5078e889855",
  "result": {
    "markdown": "---\ntitle: \"Principles and Visualizations for 1D Categorical Data\"\nauthor: \"Prof Ron Yurko\"\nfooter:  \"[mads-36613-fall24](https://ryurko.github.io/mads-36613-fall24/)\"\ndate: 2024-08-28\nengine: knitr\nformat:\n  revealjs:\n    theme: theme.scss\n    chalkboard: true\n    pdf-separate-fragments: true\n    slide-number: c/t\n    smaller: true\n    code-line-numbers: true\n    linestretch: 1.25\n    html-math-method:\n      method: mathjax\n      url: \"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"\n---\n\n\n\n\n## Reminders, previously, and today...\n\n+ **HW1 was UPDATED and is due next Wednesday - complete the GenAI Literacy module ON TIME!**\n\n+ **Complete HW0 by Thursday night!** Confirms you have everything installed and can [render `.qmd` files to PDF via `tinytex`](https://quarto.org/docs/output-formats/pdf-basics.html)\n\n. . .\n\n+ Walked through course logistics (**READ THE SYLLABUS**)\n\n+ Introduced the **Grammar of Graphics** and `ggplot2` basics\n\n. . .\n\n**TODAY:**\n\n+ Discuss data visualization principles and the role of infographics\n\n+ Visualizing categorical data (starting with 1D)\n\n\n## In the beginning...\n\n::: {style=\"font-size: 80%;\"}\n\n**Michael Florent van Langren published the first (known) statistical graphic in 1644**\n\n![](https://upload.wikimedia.org/wikipedia/commons/6/66/Grados_de_la_Longitud.jpg){fig-align=\"center\" width=80%}\n\n+ Plots different estimates of the longitudinal distance between Toledo, Spain and Rome, Italy\n\n+ i.e., visualization of collected data to aid in estimation of parameter\n\n:::\n\n. . .\n\n![](https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQDU0fPHI7y9TstYN0hASi7wlDcBUDnNoTS8yNjXehDAZVJ17glqqGBI7Wxt6y_wdgyyw&usqp=CAU){fig-align=\"center\" width=80%}\n\n\n---\n\n## [John Snow](https://www.theguardian.com/news/datablog/2013/mar/15/john-snow-cholera-map) Knows Something About Cholera\n\n![](https://media.nationalgeographic.org/assets/photos/000/276/27636.jpg){fig-align=\"center\" width=80%}\n\n\n---\n\n## [Charles Minard's](https://www.datavis.ca/gallery/minard/minard.pdf) Map of Napoleon's Russian Disaster\n\n![](https://datavizblog.files.wordpress.com/2013/05/map-full-size1.png){fig-align=\"center\" width=90%}\n\n---\n\n## [Florence Nightingale's](https://www.datavis.ca/gallery/flo.php) Rose Diagram \n\n![](https://daily.jstor.org/wp-content/uploads/2020/08/florence_nightingagle_data_visualization_visionary_1050x700.jpg){fig-align=\"center\" width=75%}\n\n\n---\n\n## [Milestones in Data Visualization History](https://friendly.github.io/HistDataVis/)\n\n![](https://friendly.github.io/HistDataVis/figs-web/07_1-mileyears3.png){fig-align=\"center\" width=80%}\n\n---\n\n## [Edward Tufte's](https://www.edwardtufte.com/tufte/) Principles of Data Visualization\n\n***Graphics***: visually display measured quantities by combining points, lines, coordinate systems, numbers, symbols, words, shading, color\n\n***Often our goal is to show data and/or communicate a story***\n\n. . .\n\n+ Induce viewer to think about substance, __not graphical methodology__\n\n+ Make large, complex datasets more coherent \n\n+ Encourage comparison of different pieces of data\n\n+ __Describe, explore, and identify relationships__\n\n+ __Avoid data distortion and data decoration__\n\n+ Use consistent graph design\n\n. . .\n\n***Avoid graphs that lead to misleading conclusions!***\n\n---\n\n## How to Fail this Class:\n\n![](https://socviz.co/assets/ch-01-chartjunk-life-expectancy.png){fig-align=\"center\" width=65%}\n\n---\n\n## What about this spiral?\n\n![](https://github.com/ryurko/SURE22-examples/blob/main/figures/lecture_examples/nyt_ex.png?raw=true){fig-align=\"center\" width=125%}\n\n. . .\n\n***[Requires distortion](https://junkcharts.typepad.com/junk_charts/nyt/)***\n\n---\n\n## Infographics to communicate a story (check out [FlowingData](https://flowingdata.com/) for more examples)\n\n![](https://i0.wp.com/flowingdata.com/wp-content/uploads/2024/08/nba-players-at-olympics-sportradar-scaled-e1723395396398.jpeg?resize=1527%2C2048&quality=89&ssl=1){fig-align=\"center\" width=65%}\n\n---\n\n## [Alberto Cairo](https://www.albertocairo.com/) and the art of insight\n\n![](https://academictechnologies.it.miami.edu/_assets/images/images/faculty-engagement/faculty-success-stories/1melgar-big.png){fig-align=\"center\" width=65%}\n\n\n\n---\n\n## 1D Categorical Data\n\nTwo different versions of categorical:\n\n1. **Nominal**: coded with arbitrary numbers, i.e., no real order\n\n+ Examples: race, gender, species, text\n\n. . .\n\n2. **Ordinal**: levels with a meaningful order\n\n+ Examples: education level, grades, ranks\n  \n. . .\n\n__NOTE__: `R` and `ggplot` considers a categorical variable to be `factor`\n\n+ `R` will always treat categorical variables as ordinal! Defaults to alphabetical...\n  \n+ We will need to manually define the `factor` levels\n\n---\n\n## 1D categorical data structure\n\n+ Observations are collected into a vector $(x_1, \\dots, x_n)$, where $n$ is number of observations\n\n+ Each observed value $x_i$ can only belong to one category level $\\{ C_1, C_2, \\dots \\}$\n\n. . .\n\nLook at `penguins` data from the [`palmerpenguins`](https://allisonhorst.github.io/palmerpenguins/) package, focusing on `species`:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(palmerpenguins)\nhead(penguins$species)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] Adelie Adelie Adelie Adelie Adelie Adelie\nLevels: Adelie Chinstrap Gentoo\n```\n:::\n:::\n\n\n***How could we summarize these data? What information would you report?***\n\n. . .\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntable(penguins$species)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n   Adelie Chinstrap    Gentoo \n      152        68       124 \n```\n:::\n:::\n\n\n---\n\n## Area plots\n\n![](https://clauswilke.com/dataviz/directory_of_visualizations_files/figure-html/proportions-1.png){fig-align=\"center\" width=65%}\n\n+ Each area corresponds to one categorical level\n\n+ Area is proportional to counts/frequencies/percentages\n\n+ Differences between areas correspond to differences between counts/frequencies/percentages\n\n\n---\n\n## Bar charts\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3-4\"}\nlibrary(tidyverse)\npenguins |>\n  ggplot(aes(x = species)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](02-categorical_files/figure-revealjs/unnamed-chunk-4-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n---\n\n## Behind the scenes: statistical summaries\n\n![](https://d33wubrfki0l68.cloudfront.net/70a3b18a1128c785d8676a48c005ee9b6a23cc00/7283c/images/visualization-stat-bar.png){fig-align=\"center\" width=65%}\n\nFrom [Chapter 3 of R for Data Science](https://r4ds.had.co.nz/data-visualisation.html)\n\n---\n\n## Spine charts - height version\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\npenguins |>\n  ggplot(aes(fill = species, x = \"\")) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](02-categorical_files/figure-revealjs/unnamed-chunk-5-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n---\n\n## Spine charts - width version\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\npenguins |>\n  ggplot(aes(fill = species, x = \"\")) +\n  geom_bar() +\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](02-categorical_files/figure-revealjs/unnamed-chunk-6-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n## What does a bar chart show?\n\n**Marginal Distribution**\n\n+ Assume categorical variable $X$ has $K$ categories: $C_1, \\dots, C_K$\n\n+ **True** marginal distribution of $X$: \n\n$$\nP(X = C_j) = p_j,\\ j \\in \\{ 1, \\dots, K \\}\n$$\n\n. . .\n\n**We have access to the Empirical Marginal Distribution**\n\n+ Observed distribution of $X$, our best estimate (MLE) of the marginal distribution of $X$: $\\hat{p}_1$, $\\hat{p}_2$, $\\dots$, $\\hat{p}_K$\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntable(penguins$species) / nrow(penguins)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n   Adelie Chinstrap    Gentoo \n0.4418605 0.1976744 0.3604651 \n```\n:::\n:::\n\n\n\n---\n\n## Bar charts with proportions\n\n+ [`after_stat()`](https://ggplot2.tidyverse.org/reference/aes_eval.html) indicates the aesthetic mapping is performed after statistical transformation\n\n+ Use `after_stat(count)` to access the `stat_count()` called by `geom_bar()`\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\npenguins |>\n  ggplot(aes(x = species)) +\n  geom_bar(aes(y = after_stat(count) / sum(after_stat(count)))) + \n  labs(y = \"Proportion\")\n```\n\n::: {.cell-output-display}\n![](02-categorical_files/figure-revealjs/unnamed-chunk-8-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n## Compute and display the proportions directly\n\n+ Use `group_by()`, `summarize()`, and `mutate()` in a pipeline to compute then display the proportions directly\n\n+ Need to indicate we are displaying the `y` axis as given, i.e., the identity function\n\n\n\n::: {.cell layout-align=\"center\" output-location='slide'}\n\n```{.r .cell-code  code-line-numbers=\"2-5,7\"}\npenguins |>\n  group_by(species) |> \n  summarize(count = n(), .groups = \"drop\") |> \n  mutate(total = sum(count), \n         prop = count / total) |> \n  ggplot(aes(x = species)) +\n  geom_bar(aes(y = prop), stat = \"identity\") \n```\n\n::: {.cell-output-display}\n![](02-categorical_files/figure-revealjs/unnamed-chunk-9-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n## What about uncertainty?\n\n+ Quantify uncertainty for our estimate $\\hat{p}_j = \\frac{n_j}{n}$ with the **standard error**:\n\n$$\nSE(\\hat{p}_j) = \\sqrt{\\frac{\\hat{p}_j(1 - \\hat{p}_j)}{n}}\n$$\n\n. . .\n\n+ Compute $\\alpha$-level __confidence interval__ (CI) as $\\hat{p}_j \\pm z_{1 - \\alpha / 2} \\cdot SE(\\hat{p}_j)$\n\n+ Good rule-of-thumb: construct 95% CI using $\\hat{p}_j \\pm 2 \\cdot SE(\\hat{p}_j)$\n\n+ Approximation justified by CLT, so CI could include values outside of [0,1]\n\n---\n\n## Add standard errors to bars\n\n+ Need to remember each CI is for each $\\hat{p}_j$ marginally, **not** jointly\n\n+ Have to be careful with __multiple testing__ \n\n\n\n::: {.cell layout-align=\"center\" output-location='slide'}\n\n```{.r .cell-code  code-line-numbers=\"6-8,11-12\"}\npenguins |>\n  group_by(species) |> \n  summarize(count = n(), .groups = \"drop\") |> \n  mutate(total = sum(count), \n         prop = count / total,\n         se = sqrt(prop * (1 - prop) / total), \n         lower = prop - 2 * se, \n         upper = prop + 2 * se) |> \n  ggplot(aes(x = species)) +\n  geom_bar(aes(y = prop), stat = \"identity\") +\n  geom_errorbar(aes(ymin = lower, ymax = upper), \n                color = \"red\") \n```\n\n::: {.cell-output-display}\n![](02-categorical_files/figure-revealjs/unnamed-chunk-10-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n## Why does this matter?\n\n\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\"}\n::: {.cell-output-display}\n![](02-categorical_files/figure-revealjs/unnamed-chunk-11-1.png){fig-align='center' width=960}\n:::\n\n::: {.cell-output-display}\n![](02-categorical_files/figure-revealjs/unnamed-chunk-11-2.png){fig-align='center' width=960}\n:::\n:::\n\n\n---\n\n## Graphs can appear the same with very different statistical conclusions - mainly due to sample size\n\n\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\"}\n::: {.cell-output-display}\n![](02-categorical_files/figure-revealjs/unnamed-chunk-12-1.png){fig-align='center' width=960}\n:::\n\n::: {.cell-output-display}\n![](02-categorical_files/figure-revealjs/unnamed-chunk-12-2.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n##  Useful to order categories by frequency with [`forcats`](https://forcats.tidyverse.org/)\n\n\n\n::: {.cell layout-align=\"center\" output-location='slide'}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\npenguins |>\n  group_by(species) |> \n  summarize(count = n(), .groups = \"drop\") |> \n  mutate(total = sum(count), \n         prop = count / total,\n         se = sqrt(prop * (1 - prop) / total), \n         lower = prop - 2 * se, \n         upper = prop + 2 * se,\n         species = fct_reorder(species, prop)) |>\n  ggplot(aes(x = species)) +\n  geom_bar(aes(y = prop), stat = \"identity\") +\n  geom_errorbar(aes(ymin = lower, ymax = upper), \n                color = \"red\") \n```\n\n::: {.cell-output-display}\n![](02-categorical_files/figure-revealjs/unnamed-chunk-13-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n## So you want to make pie charts...\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"2-5\"}\npenguins |> \n  ggplot(aes(fill = species, x = \"\")) + \n  geom_bar(aes(y = after_stat(count))) +\n  coord_polar(theta = \"y\") +\n  theme_void() \n```\n\n::: {.cell-output-display}\n![](02-categorical_files/figure-revealjs/unnamed-chunk-14-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n---\n\n## [Friends Don't Let Friends Make Pie Charts](https://github.com/cxli233/FriendsDontLetFriends)\n\n![](https://raw.githubusercontent.com/cxli233/FriendsDontLetFriends/9267fcbb0e5db5a95c2cf624db3c53b50d6ee2fb/Results/dont_pie_chart.svg){fig-align=\"center\" width=80%}\n\n---\n\n## [Waffle charts](https://github.com/hrbrmstr/waffle) are cooler anyway...\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(waffle)\npenguins |>\n  group_by(species) |> \n  summarize(count = n(), .groups = \"drop\") |> \n  ggplot(aes(fill = species, values = count)) +\n  geom_waffle(n_rows = 20, color = \"white\", flip = TRUE) +\n  coord_equal() +\n  theme_void()\n```\n\n::: {.cell-output-display}\n![](02-categorical_files/figure-revealjs/unnamed-chunk-15-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n## Recap and next steps\n\n+ Discussed basic principles of data visualization and walked through variety of examples\n\n+ Visualize categorical data with bars!\n\n+ Display uncertainty with standard errors\n\n. . .\n\n+ **HW1 is due next Wednesday - complete GenAI module ON TIME!**\n\n+ **Complete HW0 by Thursday night!** Confirms you have everything installed and can [render `.qmd` files to PDF via `tinytex`](https://quarto.org/docs/output-formats/pdf-basics.html)\n\n. . .\n\n+ **Next time**: Visualizing 2D categorical and 1D quantitative data\n\n+ Recommended reading: \n\n  + [CW Chapter 10 Visualizing proportions](https://clauswilke.com/dataviz/visualizing-proportions.html), [CW Chapter 16.2 Visualizing the uncertainty of point estimates](https://clauswilke.com/dataviz/visualizing-uncertainty.html#visualizing-the-uncertainty-of-point-estimates), [CW Chapter 11 Visualizing nested proportions](https://clauswilke.com/dataviz/nested-proportions.html)\n\n\n",
    "supporting": [
      "02-categorical_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}