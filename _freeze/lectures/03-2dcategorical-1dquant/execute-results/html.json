{
  "hash": "45ea7dfb6b5f305c499ede98ec2256ce",
  "result": {
    "markdown": "---\ntitle: \"Visualizations for 2D Categorical and 1D Quantitative Data\"\nauthor: \"Prof Ron Yurko\"\nfooter:  \"[mads-36613-fall24](https://ryurko.github.io/mads-36613-fall24/)\"\ndate: 2024-09-04\nengine: knitr\nformat:\n  revealjs:\n    theme: theme.scss\n    chalkboard: true\n    pdf-separate-fragments: true\n    slide-number: c/t\n    smaller: true\n    code-line-numbers: true\n    linestretch: 1.25\n    html-math-method:\n      method: mathjax\n      url: \"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"\n---\n\n\n\n\n## Reminders, previously, and today...\n\n+ **HW1 is due TONIGHT!**\n\n+ **HW2 is posted (due next Wednesday)**\n\n. . .\n\n+ Discussed data visualization principles and the role of infographics\n\n+ Visualized 1D categorical data, i.e., make bar charts!\n\n. . .\n\n**TODAY:**\n\n+ Pie charts...\n\n+ Visualizing 2D categorical data\n\n+ Begin 1D quantitative data\n\n---\n\n## So you want to make pie charts...\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"2-5\"}\npenguins |> \n  ggplot(aes(fill = species, x = \"\")) + \n  geom_bar(aes(y = after_stat(count))) +\n  coord_polar(theta = \"y\") +\n  theme_void() \n```\n\n::: {.cell-output-display}\n![](03-2dcategorical-1dquant_files/figure-revealjs/unnamed-chunk-2-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n---\n\n## [Friends Don't Let Friends Make Pie Charts](https://github.com/cxli233/FriendsDontLetFriends)\n\n![](https://raw.githubusercontent.com/cxli233/FriendsDontLetFriends/9267fcbb0e5db5a95c2cf624db3c53b50d6ee2fb/Results/dont_pie_chart.svg){fig-align=\"center\" width=80%}\n\n---\n\n## [Waffle charts](https://github.com/hrbrmstr/waffle) are cooler anyway...\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(waffle)\npenguins |>\n  group_by(species) |> \n  summarize(count = n(), .groups = \"drop\") |> \n  ggplot(aes(fill = species, values = count)) +\n  geom_waffle(n_rows = 20, color = \"white\", flip = TRUE) +\n  coord_equal() +\n  theme_void()\n```\n\n::: {.cell-output-display}\n![](03-2dcategorical-1dquant_files/figure-revealjs/unnamed-chunk-3-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n---\n\n## 2D categorical basics: marginal / conditional distribution \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\naddmargins(table(\"Species\" = penguins$species, \"Island\" = penguins$island))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           Island\nSpecies     Biscoe Dream Torgersen Sum\n  Adelie        44    56        52 152\n  Chinstrap      0    68         0  68\n  Gentoo       124     0         0 124\n  Sum          168   124        52 344\n```\n:::\n:::\n\n\n+ Column and row sums: marginal distributions\n\n+ Values within rows: conditional distribution for `Island` given `Species`\n\n+ Values within columns: conditional distribution for `Species` given `Island`\n\n+ Bottom right: total number of observations\n\n---\n\n## Connecting distributions to visualizations\n\nFive distributions for two categorical variables $A$ and $B$:\n\n- __Marginals__:  $P(A)$ and $P(B)$\n\n- __Conditionals__: $P(A | B)$ and $P(B|A)$\n\n- __Joint__: $P(A, B)$\n\nWe use bar charts to visualize marginal distributions for categorical variables...\n\n. . .\n\n**And we'll use more bar charts to visualize conditional and joint distributions!**\n\n---\n\n## Stacked bar charts - a bar chart of spine charts\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\npenguins |>\n  ggplot(aes(x = species, fill = island)) +\n  geom_bar() + \n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](03-2dcategorical-1dquant_files/figure-revealjs/unnamed-chunk-5-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n::: {style=\"font-size: 75%;\"}\n\n+ Easy to see marginal of `species`,  i.e., $P($ `x` $)$\n\n+ Can see conditional of `island` | `species`,  i.e., $P($ `fill` | `x` $)$\n\n+ Harder to see conditional of `species` | `island`,  i.e., $P($ `x` | `fill` $)$\n\n:::\n\n---\n\n## Side-by-side bar charts\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\npenguins |>\n  ggplot(aes(x = species, fill = island)) + \n  geom_bar(position = \"dodge\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](03-2dcategorical-1dquant_files/figure-revealjs/unnamed-chunk-6-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n::: {style=\"font-size: 75%;\"}\n\n+ Easy to see conditional of `island` | `species`,  i.e., $P($ `fill` | `x` $)$\n\n+ Can see conditional of `species` | `island`,  i.e., $P($ `x` | `fill` $)$\n\n:::\n\n---\n\n## Side-by-side bar charts\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\npenguins |>\n  ggplot(aes(x = species, fill = island)) + \n  geom_bar(position = position_dodge(preserve = \"single\")) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](03-2dcategorical-1dquant_files/figure-revealjs/unnamed-chunk-7-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n::: {style=\"font-size: 75%;\"}\n\n+ Easy to see conditional of `island` | `species`,  i.e., $P($ `fill` | `x` $)$\n\n+ Can see conditional of `species` | `island`,  i.e., $P($ `x` | `fill` $)$\n\n:::\n\n---\n\n## [Complete](https://tidyr.tidyverse.org/reference/complete.html) missing values to preserve location\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"2-6\"}\npenguins |>\n  count(species, island) |>\n  complete(species = unique(species), island = unique(island), \n           fill = list(n = 0)) |>\n  ggplot(aes(x = species, y = n, fill = island)) + \n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](03-2dcategorical-1dquant_files/figure-revealjs/unnamed-chunk-8-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n## What do you prefer?\n\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\"}\n::: {.cell-output-display}\n![](03-2dcategorical-1dquant_files/figure-revealjs/unnamed-chunk-9-1.png){fig-align='center' width=960}\n:::\n\n::: {.cell-output-display}\n![](03-2dcategorical-1dquant_files/figure-revealjs/unnamed-chunk-9-2.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n## Chi-squared test for 1D categorical data:\n\n::: {style=\"font-size: 75%;\"}\n\n+ __Null hypothesis__ $H_0$: $p_1 = p_2 = \\dots = p_K$, compute the test statistic:\n\n$$\n\\chi^2 = \\sum_{j=1}^K \\frac{(O_j - E_j)^2}{E_j}\n$$\n\n+ $O_j$: observed counts in category $j$\n\n+ $E_j$: expected counts under $H_0$, i.e., each category is equally to occur $n / K = p_1 = p_2 = \\dots = p_K$\n\n:::\n\n. . .\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nchisq.test(table(penguins$species))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tChi-squared test for given probabilities\n\ndata:  table(penguins$species)\nX-squared = 31.907, df = 2, p-value = 1.179e-07\n```\n:::\n:::\n\n\n---\n\n## Hypothesis testing review\n\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\n::: {style=\"font-size: 85%;\"}\n\nComputing $p$-values works like this:\n\n- Choose a test statistic.\n\n- Compute the test statistic in your dataset.\n\n- Is test statistic \"unusual\" compared to what I would expect under $H_0$?\n\n- Compare $p$-value to __target error rate__ $\\alpha$ (typically referred to as target level $\\alpha$ )\n\n- Typically choose $\\alpha = 0.05$ \n\n  - i.e., if we reject null  hypothesis at $\\alpha = 0.05$ then, assuming $H_0$ is true, there is a 5% chance it is a false positive (aka Type 1 error)\n  \n\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.fragment}\n\n![](https://measuringu.com/wp-content/uploads/2021/04/042121-F2.jpg){fig-align=\"center\"}\n\n:::\n\n:::\n\n::::\n\n---\n\n## Inference for 2D categorical data \n\n::: {style=\"font-size: 75%;\"}\n\nAgain we use the __chi-squared test__:\n\n+ __Null hypothesis__ $H_0$: variables $A$ and $B$ are independent, compute the test statistic:\n\n\n$$\\chi^2 = \\sum_{i}^{K_A} \\sum_{j}^{K_B} \\frac{(O_{ij} - E_{ij})^2}{E_{ij}}$$\n\n\n+ $O_{ij}$: observed counts in contingency table\n\n+ $E_{ij}$: expected counts under $H_0$\n\n$$\n\\begin{aligned}\nE_{ij} &= n \\cdot P(A = a_i, B = b_j) \\\\\n&= n \\cdot P(A = a_i) P(B = b_j) \\\\\n&= n \\cdot \\left( \\frac{n_{i \\cdot}}{n} \\right) \\left( \\frac{ n_{\\cdot j}}{n} \\right)\n\\end{aligned}\n$$\n\n:::\n\n---\n\n## Inference for 2D categorical data \n\n::: {style=\"font-size: 75%;\"}\n\nAgain we use the __chi-squared test__:\n\n+ __Null hypothesis__ $H_0$: variables $A$ and $B$ are independent, compute the test statistic:\n\n\n$$\\chi^2 = \\sum_{i}^{K_A} \\sum_{j}^{K_B} \\frac{(O_{ij} - E_{ij})^2}{E_{ij}}$$\n\n\n+ $O_{ij}$: observed counts in contingency table\n\n+ $E_{ij}$: expected counts under $H_0$\n\n:::\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nchisq.test(table(penguins$species, penguins$island))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's Chi-squared test\n\ndata:  table(penguins$species, penguins$island)\nX-squared = 299.55, df = 4, p-value < 2.2e-16\n```\n:::\n:::\n\n\n---\n\n## Visualize independence test with mosaic plots\n\n::: {style=\"font-size: 75%;\"}\n\nTwo variables are __independent__ if knowing the level of one tells us nothing about the other\n\n+ i.e.  $P(A | B) = P(A)$, and that $P(A, B) = P(A) \\times P(B)$\n\nCreate a __mosaic__ plot using __base `R`__\n\n:::\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmosaicplot(table(penguins$species, penguins$island)) \n```\n\n::: {.cell-output-display}\n![](03-2dcategorical-1dquant_files/figure-revealjs/unnamed-chunk-12-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n## Shade by _Pearson residuals_\n\n::: {style=\"font-size: 75%;\"}\n\n+ The __test statistic__ is: \n\n$$\\chi^2 = \\sum_{i}^{K_A} \\sum_{j}^{K_B} \\frac{(O_{ij} - E_{ij})^2}{E_{ij}}$$\n\n+ Define the _Pearson residuals_ as:\n\n$$r_{ij} = \\frac{O_{ij} - E_{ij}}{\\sqrt{E_{ij}}}$$\n\n- Side-note: In general, Pearson residuals are $\\frac{\\text{residuals}}{\\sqrt{\\text{variance}}}$\n\n:::\n\n. . .\n\n::: {style=\"font-size: 75%;\"}\n\n+ $r_{ij} \\approx 0 \\rightarrow$ observed counts are close to expected counts\n\n+ $|r_{ij}| > 2 \\rightarrow$ \"significant\" at level $\\alpha = 0.05$.\n\n+ Very positive $r_{ij} \\rightarrow$ more than expected, while very negative $r_{ij} \\rightarrow$ fewer than expected\n\n+ **Color by Pearson residuals** to tell us which combos are much bigger/smaller than expected.\n\n:::\n\n---\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmosaicplot(table(penguins$species, penguins$island), shade = TRUE)\n```\n\n::: {.cell-output-display}\n![](03-2dcategorical-1dquant_files/figure-revealjs/unnamed-chunk-13-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmosaicplot(table(penguins$island, penguins$sex), shade = TRUE,\n           main = \"Distribution of penguins' sex does not vary across islands\")\n```\n\n::: {.cell-output-display}\n![](03-2dcategorical-1dquant_files/figure-revealjs/unnamed-chunk-14-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n## Bonus: [Treemaps](https://cran.r-project.org/web/packages/treemapify/vignettes/introduction-to-treemapify.html) do not require same categorical levels across subgroups \n\n\n::: {.cell layout-align=\"center\" output-location='slide'}\n\n```{.r .cell-code}\nlibrary(treemapify)\npenguins |>\n  group_by(species, island) |>\n  summarize(count = n(), .groups = \"drop\") |>\n  ggplot(aes(area = count, subgroup = island,\n             label = species,\n             fill = interaction(species, island))) +\n  # 1. Draw species borders and fill colors\n  geom_treemap() +\n  # 2. Draw island borders\n  geom_treemap_subgroup_border() +\n  # 3. Print island text\n  geom_treemap_subgroup_text(place = \"centre\", grow = T, \n                             alpha = 0.5, colour = \"black\",\n                             fontface = \"italic\", min.size = 0) +\n  # 4. Print species text\n  geom_treemap_text(colour = \"white\", place = \"topleft\", \n                    reflow = T) +\n  guides(colour = \"none\", fill = \"none\")\n```\n\n::: {.cell-output-display}\n![](03-2dcategorical-1dquant_files/figure-revealjs/unnamed-chunk-15-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n---\n\n## 1D Quantitative Data\n\nObservations are collected into a vector $(x_1, \\dots, x_n)$, $x_i \\in \\mathbb{R}$ (or $\\mathbb{R}^+$, $\\mathbb{Z}$)\n\nCommon __summary statistics__ for 1D quantitative data:\n\n. . .\n\n+ __Center__: Mean, median, weighted mean, mode\n\n  + Related to the first moment, i.e., $\\mathbb{E}[X]$\n\n. . .\n\n+ __Spread__: Variance, range, min/max, quantiles, IQR\n\n  + Related to the second moment, i.e., $\\mathbb{E}[X^2]$\n  \n. . .\n\n+ __Shape__: symmetry, skew, kurtosis (\"peakedness\")\n\n  + Related to higher order moments, i.e., skewness is $\\mathbb{E}[X^3]$, kurtosis is $\\mathbb{E}[X^4]$\n  \n\nCompute various statistics with `summary()`, `mean()`, `median()`, `quantile()`, `range()`, `sd()`, `var()`, etc.\n\n---\n\n## Box plots visualize summary statistics\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"2-4\"}\npenguins |>\n  ggplot(aes(y = flipper_length_mm)) +\n  geom_boxplot(aes(x = \"\")) +\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](03-2dcategorical-1dquant_files/figure-revealjs/unnamed-chunk-16-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n## Histograms display 1D continuous distributions\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"2-3\"}\npenguins |>\n  ggplot(aes(x = flipper_length_mm)) +\n  geom_histogram()\n```\n\n::: {.cell-output-display}\n![](03-2dcategorical-1dquant_files/figure-revealjs/unnamed-chunk-17-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n## [Do NOT rely on box plots...](https://www.autodesk.com/research/publications/same-stats-different-graphs)\n\n\n \n\n---\n\n## What do visualizations of continuous distributions display?\n\n__Probability that continuous variable $X$ takes a particular value is 0__ \n\ne.g., $P$ (`flipper_length_mm` $= 200$) $= 0$, _why_?\n\n. . .\n\nInstead we use the __probability density function (PDF)__ to provide a __relative likelihood__ \n\nFor continuous variables we can use the __cumulative distribution function (CDF)__,\n\n$$\nF(x) = P(X \\leq x)\n$$\n\n. . .\n\nFor $n$ observations we can easily compute the __Empirical CDF (ECDF)__:\n\n\n$$\\hat{F}_n(x)  = \\frac{\\text{# obs. with variable} \\leq x}{n} = \\frac{1}{n} \\sum_{i=1}^{n}1(x_i \\leq x)$$\n\n\n- where $1()$ is the indicator function, i.e. `ifelse(x_i <= x, 1, 0)`\n\n---\n\n## Display full distribution with ECDF plot\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\npenguins |>\n  ggplot(aes(x = flipper_length_mm)) + \n  stat_ecdf() +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](03-2dcategorical-1dquant_files/figure-revealjs/unnamed-chunk-18-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n---\n\n## What's the relationship between these two figures?\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](03-2dcategorical-1dquant_files/figure-revealjs/unnamed-chunk-19-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n---\n\n## What about comparing to theoretical distributions?\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\n![](https://upload.wikimedia.org/wikipedia/commons/thumb/7/74/Normal_Distribution_PDF.svg/2560px-Normal_Distribution_PDF.svg.png){fig-align=\"center\" width=100%}\n\n:::\n\n::: {.column width=\"50%\"}\n\n![](https://upload.wikimedia.org/wikipedia/commons/thumb/c/ca/Normal_Distribution_CDF.svg/2560px-Normal_Distribution_CDF.svg.png){fig-align=\"center\" width=100%}\n\n:::\n\n::::\n\n\n---\n\n## One-Sample Kolmogorov-Smirnov Test\n\n- We compare the ECDF $\\hat{F}(x)$ to a theoretical distribution's CDF $F(x)$\n\n- The one sample KS test statistic is: $\\text{max}_x |\\hat{F}(x) - F(x)|$\n\n![](https://upload.wikimedia.org/wikipedia/commons/c/cf/KS_Example.png){fig-align=\"center\" width=80%}\n\n---\n\n## Flipper length example\n\nWhat if we assume `flipper_length_mm` follows Normal distribution? \n\n+ i.e., `flipper_length_mm` $\\sim N(\\mu, \\sigma^2)$\n\nNeed estimates for mean $\\mu$ and standard deviation $\\sigma$:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nflipper_length_mean <- mean(penguins$flipper_length_mm, na.rm = TRUE)\nflipper_length_sd <- sd(penguins$flipper_length_mm, na.rm = TRUE)\n```\n:::\n\n\n. . .\n\nPerform one-sample KS test using [`ks.test()`](https://stat.ethz.ch/R-manual/R-devel/library/stats/html/ks.test.html):\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nks.test(x = penguins$flipper_length_mm, y = \"pnorm\",\n        mean = flipper_length_mean, sd = flipper_length_sd)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tAsymptotic one-sample Kolmogorov-Smirnov test\n\ndata:  penguins$flipper_length_mm\nD = 0.12428, p-value = 5.163e-05\nalternative hypothesis: two-sided\n```\n:::\n:::\n\n\n\n---\n\n## Flipper length example\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](03-2dcategorical-1dquant_files/figure-revealjs/kstest-plot-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n### Visualize distribution comparisons using quantile-quantile (q-q) plots\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"2-4\"}\npenguins |>\n  ggplot(aes(sample = flipper_length_mm)) +\n  stat_qq() +\n  stat_qq_line()\n```\n\n::: {.cell-output-display}\n![](03-2dcategorical-1dquant_files/figure-revealjs/unnamed-chunk-23-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n## Recap and next steps\n\n+ Visualize categorical data with bars! Regular, stacked, side-by-side, mosaic\n\n+ Display uncertainty: (1D) standard errors, (2D) Pearson residuals\n\n+ Visualize 1D quantitative data with histograms, ECDFs, but never use a box plot by itself\n\n. . .\n\n+ **HW1 is due TONIGHT!**\n\n+ **HW2 is posted (due next Wednesday)**\n\n. . .\n\n+ **Next time**: Density Estimation\n\n+ Recommended reading: \n\n+ [CW Chapter 11 Visualizing nested proportions](https://clauswilke.com/dataviz/nested-proportions.html), [CW Chapter 7 Visualizing distributions: Histograms and density plots](https://clauswilke.com/dataviz/histograms-density-plots.html), [CW Chapter 8 Visualizing distributions: Empirical cumulative distribution functions and q-q plots](https://clauswilke.com/dataviz/ecdf-qq.html)\n\n\n---\n\n## BONUS: Visualizing the KS test statistic\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# First create the ECDF function for the variable:\nfl_ecdf <- ecdf(penguins$flipper_length_mm)\n# Compute the absolute value of the differences between the ECDF for the values\n# and the theoretical values with assumed Normal distribution:\nabs_ecdf_diffs <- abs(fl_ecdf(penguins$flipper_length_mm) - pnorm(penguins$flipper_length_mm,\n                                                                  mean = flipper_length_mean, sd = flipper_length_sd))\n# Now find where the maximum difference is:\nmax_abs_ecdf_diff_i <- which.max(abs_ecdf_diffs)\n# Get this flipper length value:\nmax_fl_diff_value <- penguins$flipper_length_mm[max_abs_ecdf_diff_i]\n# Plot the ECDF with the theoretical Normal and KS test info:\npenguins |>\n  ggplot(aes(x = flipper_length_mm)) +\n  stat_ecdf(color = \"darkblue\") +\n  # Use stat_function to draw the Normal ECDF\n  stat_function(fun = pnorm, args = list(mean = flipper_length_mean, sd = flipper_length_sd), color = \"black\", linetype = \"dashed\") +\n  # Draw KS test line:\n  geom_vline(xintercept = max_fl_diff_value, color = \"red\") +\n  # Add text with the test results (x and y are manually entered locations)\n  annotate(geom = \"text\", x = 215, y = .25, label = \"KS test stat = 0.12428\\np-value = 5.163e-05\") + \n  labs(x = \"Flipper length (mm)\", y = \"Fn(x)\") + theme_bw()\n```\n:::\n",
    "supporting": [
      "03-2dcategorical-1dquant_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}